package org.iu.engrcloudcomputing.memcached.keyvaluestore;

import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import org.iu.engrcloudcomputing.memcached.keyvaluestore.autogenerated.KeyValueStoreGrpc;
import org.iu.engrcloudcomputing.memcached.keyvaluestore.autogenerated.Keyvalue;

public class ParallelClient implements Runnable {

    private String key;
    private String value;

    public ParallelClient(String key, String value) {
        this.key = key;
        this.value = value;
    }

    @Override
    public void run() {

        ManagedChannel channel = ManagedChannelBuilder.forAddress("localhost", 9000).usePlaintext().build();

        KeyValueStoreGrpc.KeyValueStoreBlockingStub keyValueStoreBlockingStub = KeyValueStoreGrpc.newBlockingStub(channel);
//        KeyValueStoreGrpc.KeyValueStoreStub async = KeyValueStoreGrpc.newStub(channel);


//        Keyvalue.Code responseCode = keyValueStoreBlockingStub.set(Keyvalue.KeyValuePair.newBuilder()
//                .setKey(key).setValue(value).build());
//        System.out.println("Response Code: " + responseCode.getResponseCode());

        Keyvalue.KeyValuePair keyValuePair = keyValueStoreBlockingStub.get(Keyvalue.Key.newBuilder().setKey(key).build());
        System.out.println("Key: " + keyValuePair.getKey() + " Value: " + keyValuePair.getValue());
    }
}
